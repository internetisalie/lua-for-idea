<?xml version="1.0" encoding="UTF-8"?>
<project name="idlua-8-15" default="all">
  
  
  <property file="idlua-8-15.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  <property name="javac2.home" value="${idea.home}/redist"/>
  <path id="javac2.class.path">
      <pathelement location="${javac2.home}/javac2.jar"/>
      <pathelement location="${javac2.home}/forms_rt.jar"/>
      <pathelement location="${javac2.home}/annotations.jar"/>
  </path>
  <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.class.path"/>
  <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.class.path"/>
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="256m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.sbas/**"/>
    <exclude name="**/.IJI.*/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module IDLuaErrors -->
  
  <dirname property="module.idluaerrors.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.idluaerrors" value="${compiler.args}"/>
  
  <property name="idluaerrors.output.dir" value="${module.idluaerrors.basedir}/out/production/IDLuaErrors"/>
  <property name="idluaerrors.testoutput.dir" value="${module.idluaerrors.basedir}/out/test/IDLuaErrors"/>
  
  <path id="idluaerrors.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="idluaerrors.module.production.classpath"/>
  
  <path id="idluaerrors.runtime.production.module.classpath">
    <pathelement location="${idluaerrors.output.dir}"/>
  </path>
  
  <path id="idluaerrors.module.classpath">
    <pathelement location="${idluaerrors.output.dir}"/>
  </path>
  
  <path id="idluaerrors.runtime.module.classpath">
    <pathelement location="${idluaerrors.output.dir}"/>
    <pathelement location="${idluaerrors.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.idluaerrors">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.idluaerrors">
    <patternset refid="excluded.from.module.idluaerrors"/>
  </patternset>
  
  <path id="idluaerrors.module.sourcepath">
    <dirset dir="${module.idluaerrors.basedir}">
      <include name="err"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.idluaerrors" depends="compile.module.idluaerrors.production,compile.module.idluaerrors.tests" description="Compile module IDLuaErrors"/>
  
  <target name="compile.module.idluaerrors.production" description="Compile module IDLuaErrors; production classes">
    <mkdir dir="${idluaerrors.output.dir}"/>
    <javac2 destdir="${idluaerrors.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.idluaerrors}"/>
      <bootclasspath refid="idluaerrors.module.bootclasspath"/>
      <classpath refid="idluaerrors.module.production.classpath"/>
      <src refid="idluaerrors.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.idluaerrors"/>
    </javac2>
    
    <copy todir="${idluaerrors.output.dir}">
      <fileset dir="${module.idluaerrors.basedir}/err">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.idluaerrors.tests" depends="compile.module.idluaerrors.production" description="compile module IDLuaErrors; test classes" unless="skip.tests"/>
  
  <target name="clean.module.idluaerrors" description="cleanup module">
    <delete dir="${idluaerrors.output.dir}"/>
    <delete dir="${idluaerrors.testoutput.dir}"/>
  </target>
  
  
  <!-- Module IDLuaHelp -->
  
  <dirname property="module.idluahelp.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.idluahelp" value="${compiler.args}"/>
  
  <property name="idluahelp.output.dir" value="${module.idluahelp.basedir}/out/production/IDLuaHelp"/>
  <property name="idluahelp.testoutput.dir" value="${module.idluahelp.basedir}/out/test/IDLuaHelp"/>
  
  <path id="idluahelp.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="idluahelp.module.production.classpath"/>
  
  <path id="idluahelp.runtime.production.module.classpath">
    <pathelement location="${idluahelp.output.dir}"/>
  </path>
  
  <path id="idluahelp.module.classpath">
    <pathelement location="${idluahelp.output.dir}"/>
  </path>
  
  <path id="idluahelp.runtime.module.classpath">
    <pathelement location="${idluahelp.output.dir}"/>
    <pathelement location="${idluahelp.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.idluahelp">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.idluahelp">
    <patternset refid="excluded.from.module.idluahelp"/>
  </patternset>
  
  
  <target name="compile.module.idluahelp" depends="compile.module.idluahelp.production,compile.module.idluahelp.tests" description="Compile module IDLuaHelp"/>
  
  <target name="compile.module.idluahelp.production" description="Compile module IDLuaHelp; production classes"/>
  
  <target name="compile.module.idluahelp.tests" depends="compile.module.idluahelp.production" description="compile module IDLuaHelp; test classes" unless="skip.tests"/>
  
  <target name="clean.module.idluahelp" description="cleanup module">
    <delete dir="${idluahelp.output.dir}"/>
    <delete dir="${idluahelp.testoutput.dir}"/>
  </target>
  
  
  <!-- Module IDLua -->
  
  <dirname property="module.idlua.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.idlua" value="${compiler.args}"/>
  
  <property name="idlua.output.dir" value="${module.idlua.basedir}/out/production/IDLua"/>
  <property name="idlua.testoutput.dir" value="${module.idlua.basedir}/out/test/IDLua"/>
  
  <path id="idlua.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="idlua.module.production.classpath">
    <pathelement location="${basedir}/lib/kahlua-core.jar"/>
    <pathelement location="${basedir}/lib/kahlua-j2se.jar"/>
    <pathelement location="${basedir}/lib/jsyntaxpane-0.9.5.jar"/>
    <pathelement location="${idluaerrors.output.dir}"/>
    <pathelement location="${idluahelp.output.dir}"/>
  </path>
  
  <path id="idlua.runtime.production.module.classpath">
    <pathelement location="${idlua.output.dir}"/>
    <pathelement location="${basedir}/lib/kahlua-core.jar"/>
    <pathelement location="${basedir}/lib/kahlua-j2se.jar"/>
    <pathelement location="${basedir}/lib/jsyntaxpane-0.9.5.jar"/>
    <path refid="idluaerrors.runtime.production.module.classpath"/>
    <path refid="idluahelp.runtime.production.module.classpath"/>
  </path>
  
  <path id="idlua.module.classpath">
    <pathelement location="${idlua.output.dir}"/>
    <pathelement location="${basedir}/lib/kahlua-core.jar"/>
    <pathelement location="${basedir}/lib/kahlua-j2se.jar"/>
    <pathelement location="${basedir}/lib/jsyntaxpane-0.9.5.jar"/>
    <pathelement location="${idluaerrors.output.dir}"/>
    <pathelement location="${idluaerrors.testoutput.dir}"/>
    <pathelement location="${idluahelp.output.dir}"/>
    <pathelement location="${idluahelp.testoutput.dir}"/>
  </path>
  
  <path id="idlua.runtime.module.classpath">
    <pathelement location="${idlua.output.dir}"/>
    <pathelement location="${idlua.testoutput.dir}"/>
    <pathelement location="${basedir}/lib/kahlua-core.jar"/>
    <pathelement location="${basedir}/lib/kahlua-j2se.jar"/>
    <pathelement location="${basedir}/lib/jsyntaxpane-0.9.5.jar"/>
    <path refid="idluaerrors.runtime.module.classpath"/>
    <path refid="idluahelp.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.idlua">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.idlua">
    <patternset refid="excluded.from.module.idlua"/>
  </patternset>
  
  <path id="idlua.module.sourcepath">
    <dirset dir="${module.idlua.basedir}">
      <include name="src"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  <path id="idlua.module.test.sourcepath">
    <dirset dir="${module.idlua.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.idlua" depends="compile.module.idlua.production,compile.module.idlua.tests" description="Compile module IDLua"/>
  
  <target name="compile.module.idlua.production" depends="compile.module.idluaerrors,compile.module.idluahelp" description="Compile module IDLua; production classes">
    <mkdir dir="${idlua.output.dir}"/>
    <javac2 destdir="${idlua.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.idlua}"/>
      <bootclasspath refid="idlua.module.bootclasspath"/>
      <classpath refid="idlua.module.production.classpath"/>
      <src refid="idlua.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.idlua"/>
    </javac2>
    
    <copy todir="${idlua.output.dir}/com/sylvanaar/idea/Lua">
      <fileset dir="${module.idlua.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
    <copy todir="${idlua.output.dir}">
      <fileset dir="${module.idlua.basedir}/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.idlua.tests" depends="compile.module.idlua.production" description="compile module IDLua; test classes" unless="skip.tests">
    <mkdir dir="${idlua.testoutput.dir}"/>
    <javac2 destdir="${idlua.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.idlua}"/>
      <bootclasspath refid="idlua.module.bootclasspath"/>
      <classpath refid="idlua.module.classpath"/>
      <src refid="idlua.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.idlua"/>
    </javac2>
    
    <copy todir="${idlua.testoutput.dir}">
      <fileset dir="${module.idlua.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.idlua" description="cleanup module">
    <delete dir="${idlua.output.dir}"/>
    <delete dir="${idlua.testoutput.dir}"/>
  </target>
  
  <property name="idlua.plugin.path.jar" value="${module.idlua.basedir}/IDLua.zip"/>
  
  <!-- Build archive for plugin 'IDLua' -->
  <target name="plugin.build.jar.idlua" depends="compile.module.idlua" description="Build plugin archive for module &apos;IDLua&apos;">
    <property name="tmp.dir.idlua" value="${module.idlua.basedir}/../temp"/>
    <mkdir dir="${tmp.dir.idlua}"/>
    <mkdir dir="${tmp.dir.idlua}/lib"/>
    <jar destfile="${tmp.dir.idlua}/lib/IDLua.jar" duplicate="preserve">
      <zipfileset dir="${module.idlua.basedir}/out/production/IDLua"/>
      <zipfileset file="${module.idlua.basedir}/META-INF/plugin.xml" prefix="META-INF"/>
      <manifest>
        <attribute name="Created-By" value="IntelliJ IDEA"/>
        <attribute name="Manifest-Version" value="1.0"/>
      </manifest>
    </jar>
    <copy file="${module.idlua.basedir}/lib/kahlua-j2se.jar" tofile="${tmp.dir.idlua}/lib/kahlua-j2se.jar"/>
    <copy file="${module.idlua.basedir}/lib/jsyntaxpane-0.9.5.jar" tofile="${tmp.dir.idlua}/lib/jsyntaxpane-0.9.5.jar"/>
    <copy file="${module.idlua.basedir}/lib/kahlua-core.jar" tofile="${tmp.dir.idlua}/lib/kahlua-core.jar"/>
    <zip destfile="${idlua.plugin.path.jar}">
      <fileset dir="${module.idlua.basedir}/../temp"/>
    </zip>
    <delete dir="${tmp.dir.idlua}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.idluaerrors, clean.module.idluahelp, clean.module.idlua" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.idluaerrors, compile.module.idluahelp, plugin.build.jar.idlua" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>