<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2010 Jon S Akhtar (Sylvanaar)
  ~
  ~   Licensed under the Apache License, Version 2.0 (the "License");
  ~   you may not use this file except in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<project name="module_idluaerrors" default="compile.module.idluaerrors">
  <dirname property="module.idluaerrors.basedir" file="${ant.file.module_idluaerrors}"/>
  
  <property name="module.jdk.home.idluaerrors" value="${jdk.home.idea_sdk_-_debug}"/>
  <property name="module.jdk.bin.idluaerrors" value="${jdk.bin.idea_sdk_-_debug}"/>
  <property name="module.jdk.classpath.idluaerrors" value="jdk.classpath.idea_sdk_-_debug"/>
  
  <property name="compiler.args.idluaerrors" value="${compiler.args}"/>
  
  <property name="idluaerrors.output.dir" value="${module.idluaerrors.basedir}/../out/production/IDLuaErrors"/>
  <property name="idluaerrors.testoutput.dir" value="${module.idluaerrors.basedir}/../out/test/IDLuaErrors"/>
  
  <path id="idluaerrors.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="idluaerrors.module.production.classpath">
    <path refid="${module.jdk.classpath.idluaerrors}"/>
  </path>
  
  <path id="idluaerrors.runtime.production.module.classpath">
    <pathelement location="${idluaerrors.output.dir}"/>
  </path>
  
  <path id="idluaerrors.module.classpath">
    <path refid="${module.jdk.classpath.idluaerrors}"/>
    <pathelement location="${idluaerrors.output.dir}"/>
  </path>
  
  <path id="idluaerrors.runtime.module.classpath">
    <pathelement location="${idluaerrors.output.dir}"/>
    <pathelement location="${idluaerrors.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.idluaerrors">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.idluaerrors">
    <patternset refid="excluded.from.module.idluaerrors"/>
  </patternset>
  
  <path id="idluaerrors.module.sourcepath">
    <dirset dir="${module.idluaerrors.basedir}/../../idlua-8-15">
      <include name="err"/>
    </dirset>
  </path>

<property  name="idea.lib" value="C:\\Program Files (x86)\\JetBrains\\IntelliJ IDEA 9.0.3\\lib"/>

<path id="javac2.classpath">
    <pathelement location="${idea.lib}/javac2.jar"/>
    <pathelement location="${idea.lib}/jdom.jar"/>
    <pathelement location="${idea.lib}/asm.jar"/>
    <pathelement location="${idea.lib}/asm-commons.jar"/>
    <pathelement location="${idea.lib}/jgoodies-forms.jar"/>
</path>
<taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>

  <target name="compile.module.idluaerrors" depends="compile.module.idluaerrors.production,compile.module.idluaerrors.tests" description="Compile module IDLuaErrors"/>
  
  <target name="compile.module.idluaerrors.production" description="Compile module IDLuaErrors; production classes">
    <mkdir dir="${idluaerrors.output.dir}"/>
    <javac2 destdir="${idluaerrors.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.idluaerrors}/javac">
      <compilerarg line="${compiler.args.idluaerrors}"/>
      <bootclasspath refid="idluaerrors.module.bootclasspath"/>
      <classpath refid="idluaerrors.module.production.classpath"/>
      <src refid="idluaerrors.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.idluaerrors"/>
    </javac2>
    
    <copy todir="${idluaerrors.output.dir}">
      <fileset dir="${module.idluaerrors.basedir}">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.idluaerrors.tests" depends="compile.module.idluaerrors.production" description="compile module IDLuaErrors; test classes" unless="skip.tests"/>
  
  <target name="clean.module.idluaerrors" description="cleanup module">
    <delete dir="${idluaerrors.output.dir}"/>
    <delete dir="${idluaerrors.testoutput.dir}"/>
  </target>
</project>