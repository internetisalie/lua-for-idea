/*
 * Copyright 2011 Jon S Akhtar (Sylvanaar)
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package com.sylvanaar.idea.Lua.lang.formatter;

/**
 * Created by IntelliJ IDEA.
 * User: Jon S Akhtar
 * Date: 10/1/11
 * Time: 1:11 PM
 */
public class LuaSupportedCodeStyleSettings {
    enum SpacingOption {
//      INSERT_FIRST_SPACE_IN_LINE,
      SPACE_AROUND_ASSIGNMENT_OPERATORS,
      SPACE_AROUND_LOGICAL_OPERATORS,
      SPACE_AROUND_EQUALITY_OPERATORS,
      SPACE_AROUND_RELATIONAL_OPERATORS,
//      SPACE_AROUND_BITWISE_OPERATORS,
      SPACE_AROUND_ADDITIVE_OPERATORS,
      SPACE_AROUND_MULTIPLICATIVE_OPERATORS,
//      SPACE_AROUND_SHIFT_OPERATORS,
      SPACE_AROUND_UNARY_OPERATOR,
      SPACE_AFTER_COMMA,
      SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS,
      SPACE_BEFORE_COMMA,
      SPACE_AFTER_SEMICOLON,
      SPACE_BEFORE_SEMICOLON,
      SPACE_WITHIN_PARENTHESES,
      SPACE_WITHIN_METHOD_CALL_PARENTHESES,
      SPACE_WITHIN_METHOD_PARENTHESES,
      SPACE_WITHIN_IF_PARENTHESES,
      SPACE_WITHIN_WHILE_PARENTHESES,
      SPACE_WITHIN_FOR_PARENTHESES,
//      SPACE_WITHIN_TRY_PARENTHESES,
//      SPACE_WITHIN_CATCH_PARENTHESES,
//      SPACE_WITHIN_SWITCH_PARENTHESES,
//      SPACE_WITHIN_SYNCHRONIZED_PARENTHESES,
//      SPACE_WITHIN_CAST_PARENTHESES,
      SPACE_WITHIN_BRACKETS,
//      SPACE_WITHIN_BRACES,
      SPACE_WITHIN_ARRAY_INITIALIZER_BRACES,
//      SPACE_AFTER_TYPE_CAST,
      SPACE_BEFORE_METHOD_CALL_PARENTHESES,
      SPACE_BEFORE_METHOD_PARENTHESES,
      SPACE_BEFORE_IF_PARENTHESES,
      SPACE_BEFORE_WHILE_PARENTHESES,
      SPACE_BEFORE_FOR_PARENTHESES,
//      SPACE_BEFORE_TRY_PARENTHESES,
//      SPACE_BEFORE_CATCH_PARENTHESES,
//      SPACE_BEFORE_SWITCH_PARENTHESES,
//      SPACE_BEFORE_SYNCHRONIZED_PARENTHESES,
//      SPACE_BEFORE_CLASS_LBRACE,
//      SPACE_BEFORE_METHOD_LBRACE,
//      SPACE_BEFORE_IF_LBRACE,
//      SPACE_BEFORE_ELSE_LBRACE,
//      SPACE_BEFORE_WHILE_LBRACE,
//      SPACE_BEFORE_FOR_LBRACE,
//      SPACE_BEFORE_DO_LBRACE,
//      SPACE_BEFORE_SWITCH_LBRACE,
//      SPACE_BEFORE_TRY_LBRACE,
//      SPACE_BEFORE_CATCH_LBRACE,
//      SPACE_BEFORE_FINALLY_LBRACE,
//      SPACE_BEFORE_SYNCHRONIZED_LBRACE,
//      SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE,
//      SPACE_BEFORE_ANNOTATION_ARRAY_INITIALIZER_LBRACE,
//      SPACE_BEFORE_ELSE_KEYWORD,
//      SPACE_BEFORE_WHILE_KEYWORD,
//      SPACE_BEFORE_CATCH_KEYWORD,
//      SPACE_BEFORE_FINALLY_KEYWORD,
//      SPACE_BEFORE_QUEST,
//      SPACE_AFTER_QUEST,
//      SPACE_BEFORE_COLON,
//      SPACE_AFTER_COLON,
//      SPACE_BEFORE_TYPE_PARAMETER_LIST,
//      SPACE_BEFORE_ANOTATION_PARAMETER_LIST,
//      SPACE_WITHIN_ANNOTATION_PARENTHESES,
    }

    enum BlankLinesOption {
      KEEP_BLANK_LINES_IN_DECLARATIONS,
      KEEP_BLANK_LINES_IN_CODE,
      KEEP_BLANK_LINES_BEFORE_RBRACE,
//      BLANK_LINES_BEFORE_PACKAGE,
//      BLANK_LINES_AFTER_PACKAGE,
//      BLANK_LINES_BEFORE_IMPORTS,
//      BLANK_LINES_AFTER_IMPORTS,
//      BLANK_LINES_AROUND_CLASS,
//      BLANK_LINES_AROUND_FIELD,
//      BLANK_LINES_AROUND_METHOD,
//      BLANK_LINES_BEFORE_METHOD_BODY,
//      BLANK_LINES_AROUND_FIELD_IN_INTERFACE,
//      BLANK_LINES_AROUND_METHOD_IN_INTERFACE,
//      BLANK_LINES_AFTER_CLASS_HEADER,
//      BLANK_LINES_AFTER_ANONYMOUS_CLASS_HEADER
    }

    enum WrappingOrBraceOption {
      KEEP_CONTROL_STATEMENT_IN_ONE_LINE,
      LINE_COMMENT_AT_FIRST_COLUMN,
      BLOCK_COMMENT_AT_FIRST_COLUMN,
      KEEP_LINE_BREAKS,
      KEEP_FIRST_COLUMN_COMMENT,
      CALL_PARAMETERS_WRAP,
      PREFER_PARAMETERS_WRAP,
      CALL_PARAMETERS_LPAREN_ON_NEXT_LINE,
      CALL_PARAMETERS_RPAREN_ON_NEXT_LINE,
      METHOD_PARAMETERS_WRAP,
      METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE,
      METHOD_PARAMETERS_RPAREN_ON_NEXT_LINE,
      RESOURCE_LIST_WRAP,
      RESOURCE_LIST_LPAREN_ON_NEXT_LINE,
      RESOURCE_LIST_RPAREN_ON_NEXT_LINE,
//      EXTENDS_LIST_WRAP,
//      THROWS_LIST_WRAP,
//      EXTENDS_KEYWORD_WRAP,
//      THROWS_KEYWORD_WRAP,
      METHOD_CALL_CHAIN_WRAP,
      PARENTHESES_EXPRESSION_LPAREN_WRAP,
      PARENTHESES_EXPRESSION_RPAREN_WRAP,
      BINARY_OPERATION_WRAP,
      BINARY_OPERATION_SIGN_ON_NEXT_LINE,
      TERNARY_OPERATION_WRAP,
      TERNARY_OPERATION_SIGNS_ON_NEXT_LINE,
//      MODIFIER_LIST_WRAP,
      KEEP_SIMPLE_BLOCKS_IN_ONE_LINE,
      KEEP_SIMPLE_METHODS_IN_ONE_LINE,
      KEEP_SIMPLE_CLASSES_IN_ONE_LINE,
      KEEP_MULTIPLE_EXPRESSIONS_IN_ONE_LINE,
      FOR_STATEMENT_WRAP,
      FOR_STATEMENT_LPAREN_ON_NEXT_LINE,
      FOR_STATEMENT_RPAREN_ON_NEXT_LINE,
      ARRAY_INITIALIZER_WRAP,
      ARRAY_INITIALIZER_LBRACE_ON_NEXT_LINE,
      ARRAY_INITIALIZER_RBRACE_ON_NEXT_LINE,
      ASSIGNMENT_WRAP,
      PLACE_ASSIGNMENT_SIGN_ON_NEXT_LINE,
//      LABELED_STATEMENT_WRAP,
      WRAP_COMMENTS,
//      ASSERT_STATEMENT_WRAP,
//      ASSERT_STATEMENT_COLON_ON_NEXT_LINE,
//      IF_BRACE_FORCE,
//      DOWHILE_BRACE_FORCE,
//      WHILE_BRACE_FORCE,
//      FOR_BRACE_FORCE,
      WRAP_LONG_LINES,
//      METHOD_ANNOTATION_WRAP,
//      CLASS_ANNOTATION_WRAP,
//      FIELD_ANNOTATION_WRAP,
//      PARAMETER_ANNOTATION_WRAP,
//      VARIABLE_ANNOTATION_WRAP,
      ALIGN_MULTILINE_CHAINED_METHODS,
      ALIGN_MULTILINE_PARAMETERS,
      ALIGN_MULTILINE_PARAMETERS_IN_CALLS,
      ALIGN_MULTILINE_RESOURCES,
      ALIGN_MULTILINE_FOR,
      INDENT_WHEN_CASES,
      ALIGN_MULTILINE_BINARY_OPERATION,
      ALIGN_MULTILINE_ASSIGNMENT,
      ALIGN_MULTILINE_TERNARY_OPERATION,
      ALIGN_MULTILINE_THROWS_LIST,
//      ALIGN_THROWS_KEYWORD,
//      ALIGN_MULTILINE_EXTENDS_LIST,
      ALIGN_MULTILINE_METHOD_BRACKETS,
      ALIGN_MULTILINE_PARENTHESIZED_EXPRESSION,
      ALIGN_MULTILINE_ARRAY_INITIALIZER_EXPRESSION,
      ALIGN_GROUP_FIELD_DECLARATIONS,
      BRACE_STYLE,
//      CLASS_BRACE_STYLE,
//      METHOD_BRACE_STYLE,
//      USE_FLYING_GEESE_BRACES,
//      FLYING_GEESE_BRACES_GAP,
//      DO_NOT_INDENT_TOP_LEVEL_CLASS_MEMBERS,
      ELSE_ON_NEW_LINE,
//      WHILE_ON_NEW_LINE,
//      CATCH_ON_NEW_LINE,
//      FINALLY_ON_NEW_LINE,
//      INDENT_CASE_FROM_SWITCH,
//      SPECIAL_ELSE_IF_TREATMENT
    }
}
